django-admin startproject mysite - gera o diretório mysite contendo todo o esqueleto do projeto
py manage.py startapp polls - cria o sistema 
py manage.py runserver - roda o servidor no localhost
py manage.py migrate - cria um banco de dados de acordo com as configurações fornecidas dentro do settings.py
py manage.py makemigrations polls - informa ao django que existem mudanças nos modelos que precisam ser armazenadas como uma migração
py manage.py check - checa problemas no projeto sem criar migrations ou alterar o banco de dados
py manage.py shell - abre a shell do python e a partir daí pode executar os testes de API
py manage.py createsuperuser - cria um usuario admin 
py manage.py test polls - roda os testes que foram criados dentro do diretório polls
py -c "import django; print(django.__path__)" - caso queira encontrar onde estão os arquivos django no seu sistema
py -m pip install django-debug-toolbar - ajuda a entender o funcionamento da aplicação e encontrar problemas

migrações permitem alterar o modelos ao longo do tempo, sem precisar alterar manualmente o banco de dados; para realizar essas mudanças siga esses passos: 
1) mude os modelos em models.py;
2) py manage.py makemigrations para criar migrações para suas modificações;
3) py manage.py migrate para aplicar suas modificações no banco de dados.